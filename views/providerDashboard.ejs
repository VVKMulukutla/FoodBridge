<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Provider Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://kit.fontawesome.com/054142dafc.js" crossorigin="anonymous"></script>
</head>
<body class="bg-gray-100">
    <div class="flex justify-between bg-blue-500 text-white py-4 px-8">
        <a href="/signout" id="signoutButton" class="text-lg font-bold">Sign Out</a>
        <h1 class="text-2xl font-bold">Provider Dashboard</h1>
        <div></div> <!-- This empty div can be used for any other content you might want to add on the right side of the header -->
    </div>
    <h1 class="text-2xl font-bold text-center my-4">Provider Dashboard</h1>
    <div class="flex justify-center">
        <button id="addBtn" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4">Add Surplus Food</button>
    </div>
    <div class="dropdown mt-4 hidden" id="dropdown">
        <form id="surplusForm" action="/upload" method="post" class="flex flex-col space-y-2">
            <label for="name" class="font-bold">Name of Food:</label>
            <input type="text" id="name" name="name" required class="border rounded-md px-2 py-1"><br>
            <input type="hidden" id="email" name="email" value="<%= email %>">
            <label for="quantity" class="font-bold">Quantity:</label>
            <input type="number" id="quantity" name="quantity" required class="border rounded-md px-2 py-1"><br>
            <label for="timeofcook" class="font-bold">Time of Cook:</label>
            <input type="text" id="timeofcook" name="timeofcook" required class="border rounded-md px-2 py-1"><br>
            <label for="approxServing" class="font-bold">Approx Serving:</label>
            <input type="number" id="approxServing" name="servecount" required class="border rounded-md px-2 py-1"><br>
            <label for="from" class="font-bold">From:</label>
            <input type="time" id="from" name="timein" required class="border rounded-md px-2 py-1"><br>
            <label for="to" class="font-bold">To:</label>
            <input type="time" id="to" name="timeout" required class="border rounded-md px-2 py-1"><br>
            <label for="location" class="font-bold">Location:</label>
            <input type="text" id="location" name="location" required class="border rounded-md px-2 py-1"><br>
            <button type="submit" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded">Submit</button>
        </form>
    </div>
    <div class="mt-4">
        <% surplusItems.forEach(item => { %>
            <div class="bg-white border rounded-md p-4 mb-2">
                <p class="font-bold">Name: <%= item.name %></p>
                <p>Quantity: <%= item.quantity %></p>
                <p>Time of Cook: <%= item.timeofcook %></p>
                <p>Approx Serving: <%= item.servecount %></p>
                <p>From: <%= item.timein %> To: <%= item.timeout %></p>
                <p>Location: <%= item.location %></p>
                <a href="#" onclick="deleteSurplusItem('<%= item.owner %>')" class="delete-item"><i class="fa-solid fa-trash"></i></a>
            </div>
        <% }); %>
    </div>

    <iframe src="/requestsReceived" width="300" height="200" class="mt-4"></iframe>
    <iframe src="/pastHistoryRating" width="300" height="200" class="mt-4"></iframe>

    <script>
        const addBtn = document.getElementById("addBtn");
        const dropdown = document.getElementById("dropdown");
        const deleteButtons = document.querySelectorAll(".delete-item");
    
        addBtn.addEventListener("click", function() {
            if (dropdown.classList.contains("hidden")) {
                dropdown.classList.remove("hidden");
            } else {
                dropdown.classList.add("hidden");
            }
        });
        function deleteSurplusItem(email) {
            fetch(`/surplusItems/${email}`, {
                method: 'DELETE'
            })
            .then(response => {
                if (response.ok) {
                    return response.text();
                }
                throw new Error('Network response was not ok.');
            })
            .then(data => {
                console.log(data); // Assuming you want to log the response data
                // Optionally, you can perform any additional actions after successful deletion
                window.location.reload(); // Reload the window after successful deletion
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
                // Optionally, handle errors here
            });
        }


    </script>
</body>
</html>
